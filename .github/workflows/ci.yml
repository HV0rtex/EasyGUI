name: CI/CD

on:
  push:
    branches:
    - Version_3.0.0

  pull_request:
    branches:
    - main
    - Version_3.0.0

jobs:
  Precheck:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master

    - name: Check commit message
      run: |
        if [[ "${{ github.event.head_commit.message }}" =~ ^F[0-9]{4}-* ]]; \
        then                                                                \
          exit 0                                                            \
        else                                                                \
          exit 1                                                            \ 
        fi                                                                  
  
    - name: Run cpplint
      run: pip install cpplint && cpplint --extensions=in,cpp --recursive --quiet .

  Build:
    needs: Precheck
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: VS 2022,  os: windows-2022   }
        - { name: VS 2019,  os: windows-2019   }
        - { name: Linux,    os: ubuntu-latest  }
        - { name: MacOS,    os: macos-latest   }

    steps:
    - uses: actions/checkout@master    

    - name: Install SFML [ Linux ]
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libsfml-dev

    - name: Install SFML [ macOS ]
      if: runner.os == 'macOS'
      run: brew install sfml

    - name: Checkout SFML [ Windows ]
      if: runner.os == 'Windows'
      uses: actions/checkout@master
      with:
        fetch-depth: 0
        repository: SFML/SFML
        ref: 2.6.0
        path: SFML

    - name: Configure SFML [ Windows ]
      if: runner.os == 'Windows'
      shell: bash
      run: cmake -S $GITHUB_WORKSPACE/SFML -B $GITHUB_WORKSPACE/SFML/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/SFML/install 
      
    - name: Build SFML [ Windows ]
      if: runner.os == 'Windows'
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/SFML/build --config Release --target install                           

    - name: Configure CMake for SHARED libraries
      run: cmake -B ${{github.workspace}}/build -DBUILD_SHARED_LIBRARIES=ON -DCMAKE_PREFIX_PATH=${{github.workspace}}/SFML/install/lib/cmake

    - name: Building SHARED libraries
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: Configure CMake for STATIC libraries
      run: cmake -B ${{github.workspace}}/build -DBUILD_SHARED_LIBRARIES=OFF -DCMAKE_PREFIX_PATH=${{github.workspace}}/SFML/install/lib/cmake

    - name: Building STATIC libraries
      run: cmake --build ${{github.workspace}}/build --config Release

  Test:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Installing dependencies
      run: sudo apt-get update && sudo apt-get install libsfml-dev libgtest-dev

    - name: Configuring for SHARED libraries
      run: cmake -B ${{github.workspace}}/build -DBUILD_SHARED_LIBRARIES=ON -DBUILD_TESTS=ON -DBUILD_RELEASE=ON

    - name: Building SHARED libraries and tests
      run: cmake --build ${{github.workspace}}/build

  Cleanup:
    needs: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Generating documentation
      run: |
        sudo apt-get install doxygen &&                                              \
        cd ${{github.workspace}} && doxygen docs/doxyfile.txt                        