name: CI/CD

on:
  push:
    branches:
    - Version_3.0.0

  pull_request:
    branches:
    - main
    - Version_3.0.0

jobs:
  Precheck:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master

    - name: Check commit message
      run: |
        if [[ "${{ github.event.head_commit.message }}" =~ ^F[0-9]{4}-* ]]; \
        then                                                                \
          exit 0                                                            \
        else                                                                \
          exit 1                                                            \ 
        fi                                                                  
  
    - name: Run cpplint
      run: pip install cpplint && cpplint --recursive --quiet .

  Build:
    needs: Precheck
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: VS 2022,  os: windows-2022   }
        - { name: VS 2019,  os: windows-2019   }
        - { name: Linux,    os: ubuntu-latest  }
        - { name: MacOS,    os: macos-latest   }

    steps:
    - uses: actions/checkout@master    

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: Checkout SFML
      uses: actions/checkout@master
      with:
        fetch-depth: 0
        repository: SFML/SFML
        ref: 2.5.1
        path: SFML

    - name: Build SFML
      shell: bash
      run:  cmake -S $GITHUB_WORKSPACE/SFML -B $GITHUB_WORKSPACE/SFML/build -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/SFML/install && cmake --build $GITHUB_WORKSPACE/SFML/build --config ${{env.BUILD_TYPE}} --target install                           

    - name: Build shared libraries
      if: runner.os == 'Windows'
      run: build.bat SHARED
      else:
      run: build.sh SHARED

    - name: Build static libraries
      if: runner.os == 'Windows'
      run: build.bat SHARED
      else:
      run: build.sh SHARED

    - name: Publishing package
      uses: actions/upload-artifact@master
      with:
        name: ${{matrix.platform.name}}
        path: |
          ${{github.workspace}}/bin
          ${{github.workspace}}/lib
          ${{github.workspace}}/include
          ${{github.workspace}}/SFML/install

  Test:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Installing dependencies
      run: sudo apt-install libsfml-dev libgtest-dev

  Cleanup:
    needs: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Generating documentation
      run: |
        sudo apt-get install doxygen &&                                              \
        cd ${{github.workspace}} && doxygen docs/doxyfile.txt                        

    - name: Publishing package
      uses: actions/upload-artifact@master
      with:
        name: Documentation
        path: ${{github.workspace}}/docs/html