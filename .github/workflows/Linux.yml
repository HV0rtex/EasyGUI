name: Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Downloading test framework
      run: sudo apt-get install libgtest-dev && cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make

    - name: Installing test framework
      run: sudo cp /usr/src/gtest/lib/*.a /usr/lib && sudo ln -s /usr/lib/libgtest.a /usr/local/lib/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/libgtest_main.a

    - name: Installing SFML
      run: sudo apt-get install libsfml-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Building project
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Installing artifacts
      run: cd ${{github.workspace}}/build && make install

    - name: Publishing tests
      uses: actions/upload-artifact@master
      with:
        name: Unit_tests
        path: ${{github.workspace}}/bin/tests

    - name: Cleaning bin directory
      run: rm -rf ${{github.workspace}}/bin/tests

    - name: Publishing API
      uses: actions/upload-artifact@master
      with:
        name: EasyGUI
        path: | 
          ${{github.workspace}}/include
          ${{github.workspace}}/examples
          ${{github.workspace}}/bin
          ${{github.workspace}}/lib

    - name: Generating documentation
      run: cd ${{github.workspace}} && doxygen docs/doxyfile.txt

    - name: Publishing documentation
      uses: actions/upload-artifact@master
      with:
        name: Documentation
        path: ${{github.workspace}}/docs/html

  Test:
    needs: Build
    runs-on: ubuntu-latest

    steps:
    - name: Downloading unit tests
      uses: actions/download-artifact@master
      with:
        name: Unit_tests
        path: ~/unit_tests

    - name: Executing tests
      run: cd ~/unit_tests; for item in $(ls .); do if [[ $item = *UT ]]; then ./$item; if [[ $? != 0 ]]; then exit 1; fi fi done